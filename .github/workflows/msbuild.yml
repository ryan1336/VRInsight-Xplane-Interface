name: MSBuild

on:
  workflow_dispatch:
  push:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: VRInsightPlugin\VrInsightPlugin.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: ReleaseDev # Release currently fails due to precompiled-header settings

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Fetch XPlane SDK
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run:  curl --fail https://developer.x-plane.com/wp-content/plugins/code-sample-generation/sample_templates/XPSDK303.zip --output XPSDK303.zip
    
    - name: Unpack SDK
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        7z x XPSDK303.zip -y
        rd /s/q XPSDK
        ren SDK XPSDK

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1
      #with:
      #  vs-version: '[14.0,15.0)' # Use VS 2015

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
    
    - name: Save Results
      uses: actions/upload-artifact@v2
      with:
        name: XVrII
        path: |
          Output/*/win.xpl
          Output/*/payload.dll
